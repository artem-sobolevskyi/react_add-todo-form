{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","fullTodo","id","title","completed","cn","TodoList","fullTodos","map","username","userId","App","useState","todosFromServer","todos","setTodos","selectedUserId","setSelectedUserId","setTitle","titleError","setTitleError","chooseUserError","setChooseUserError","todo","usersFromServer","find","handleSubmit","event","preventDefault","length","Number","action","method","onSubmit","type","placeholder","value","onChange","titleInputValue","target","userSelectValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCNMI,EAA4B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAExCC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,UACAT,EACEM,EADFN,KAGF,OACE,0BACE,oBAAYO,GACZJ,UAAWO,IAAG,WAAY,CAAE,sBAAuBD,IAFrD,UAIE,oBAAIN,UAAU,kBAAd,SACGK,IAIDR,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCnBnBW,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACvC,yBAAST,UAAU,WAAnB,SACGS,EAAUC,KAAI,SAACP,GAAD,OACb,cAAC,EAAD,CAAUA,SAAUA,GAAeA,EAASC,UCXnC,GACb,CACEA,GAAI,EACJN,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BC3DI,GACb,CACEK,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACER,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACER,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXM,OAAQ,ICNCC,EAAM,WACjB,MAA0BC,mBAASC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4CH,mBAAS,IAArD,mBAAOI,EAAP,KAAuBC,EAAvB,KACA,EAA0BL,mBAAS,IAAnC,mBAAOT,EAAP,KAAce,EAAd,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA8CR,oBAAS,GAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KAEMf,EAAwBO,EAAMN,KAAI,SAAAe,GAAI,kCACvCA,GADuC,IAE1C5B,MAbiBe,EAaCa,EAAKb,OAZzBc,EAAgBC,MAAK,SAAC9B,GAAD,OAAUA,EAAKO,KAAOQ,MAAW,QADpC,IAACA,KAqBbgB,EAAe,SAACC,GACpBA,EAAMC,iBAEDzB,GACHiB,GAAc,GAGXJ,GACHM,GAAmB,GAGhBnB,GAAUa,IAIfD,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAClBZ,GAAIY,EAAMe,OAAS,EACnB1B,QACAO,OAAQoB,OAAOd,GACfZ,WAAW,MAvBbc,EAAS,IACTD,EAAkB,MAsCpB,OACE,sBAAKnB,UAAU,MAAf,UACE,+CAEA,uBACEiC,OAAO,aACPC,OAAO,OACPC,SAAU,SAACN,GACTD,EAAaC,IAJjB,UAOE,sBAAK7B,UAAU,QAAf,UACE,kCACG,UACD,uBACEoC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOjC,EACPkC,SAAU,SAACV,GAxBH,IAACW,IAyBKX,EAAMY,OAAOH,MAxBrClB,EAASoB,GACTlB,GAAc,SA2BPD,GACI,sBAAMrB,UAAU,QAAhB,qCAGP,sBAAKA,UAAU,QAAf,UACE,kCACG,SACD,yBACE,UAAQ,aACRsC,MAAOpB,EACPqB,SAAU,SAACV,GA5CF,IAACa,IA6CKb,EAAMY,OAAOH,MA5CtCnB,EAAkBuB,GAClBlB,GAAmB,IAuCX,UAOE,wBAAQc,MAAM,GAAGK,UAAQ,EAAzB,2BACCjB,EAAgBhB,KAAI,SAAAb,GAAI,OACvB,wBAAQyC,MAAOzC,EAAKO,GAApB,SAAyBP,EAAKc,oBAKlCY,GACK,sBAAMvB,UAAU,QAAhB,qCAIT,wBAAQoC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU3B,UAAWA,QCnH3BmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a1bfde25.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { FullTodo } from '../../types/FullTodo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  fullTodo: FullTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ fullTodo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = fullTodo;\n\n  return (\n    <article\n      data-id={`${id}`}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user && <UserInfo user={user} />\n      }\n    </article>\n  );\n};\n","import React from 'react';\nimport { FullTodo } from '../../types/FullTodo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  fullTodos: FullTodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ fullTodos }) => (\n  <section className=\"TodoList\">\n    {fullTodos.map((fullTodo:FullTodo) => (\n      <TodoInfo fullTodo={fullTodo} key={fullTodo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { FullTodo } from './types/FullTodo';\n\nconst getUserById = (userId:number) => (\n  usersFromServer.find((user) => user.id === userId) || null\n);\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [title, setTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [chooseUserError, setChooseUserError] = useState(false);\n\n  const fullTodos: FullTodo[] = todos.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n\n  const clearForm = () => {\n    setTitle('');\n    setSelectedUserId('');\n  };\n\n  const handleSubmit = (event:FormEvent) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!selectedUserId) {\n      setChooseUserError(true);\n    }\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    setTodos([...todos, {\n      id: todos.length + 1,\n      title,\n      userId: Number(selectedUserId),\n      completed: false,\n    }]);\n\n    clearForm();\n  };\n\n  const handleSelect = (userSelectValue:string) => {\n    setSelectedUserId(userSelectValue);\n    setChooseUserError(false);\n  };\n\n  const handleTitle = (titleInputValue:string) => {\n    setTitle(titleInputValue);\n    setTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          handleSubmit(event);\n        }}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                handleTitle(event.target.value);\n              }}\n            />\n          </label>\n          {titleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={(event) => {\n                handleSelect(event.target.value);\n              }}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id}>{user.username}</option>\n              ))}\n            </select>\n          </label>\n          {\n            chooseUserError\n              && <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList fullTodos={fullTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}